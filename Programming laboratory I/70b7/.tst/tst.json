{
  "files": {
    "seguro.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# Aluno: Misael Augusto\n# Matr\u00edcula: 117110525\n# Problema: C\u00e1lculo de Seguro\n\ndef calcula_seguro(valor_veiculo, lista):\n\tdados_cliente = []\n\tverdadeiros = [10, 20, 20, 20, 10]\n\tfalsos = [20, 10, 10, 10, 20]\n\tpontos = 0\n\tif lista[0] <= 21:\n\t\tpontos += 20\n\telif 22 <= lista[0] <= 30:\n\t\tpontos += 15\n\telif 31 <= lista[0] <= 40:\n\t\tpontos += 12\n\telif 41 <= lista[0] <= 60:\n\t\tpontos += 10\n\telse:\n\t\tpontos += 20\n\t\t\n\tfor i in range(1, len(lista) - 1):\n\t\tif lista[i]:\n\t\t\tpontos += verdadeiros[i - 1]\n\t\telse:\n\t\t\tpontos += falsos[i - 1]\n\t\t\n\tif lista[-1] == \"Lazer\" or lista[-1] == \"Misto\":\n\t\tpontos += 20\n\telse:\n\t\tpontos += 10\n\t\t\n\tif pontos <= 80:\n\t\tmensagem = \"Risco Baixo\"\n\t\tvalor = valor_veiculo * 0.1\n\telif 80 < pontos <= 100:\n\t\tmensagem = \"Risco Medio\"\n\t\tvalor = valor_veiculo * 0.2\n\telse:\n\t\tmensagem = \"Risco Alto\"\n\t\tvalor = valor_veiculo * 0.3\n\t\n\tdados_cliente.append(pontos)\n\tdados_cliente.append(mensagem)\n\tdados_cliente.append(valor)\n\t\n\treturn dados_cliente\n\nprint calcula_seguro(2000.0, [21, True, True, True, True, True, \"Misto\"])\n\t\t\n",
      "name": "seguro.py"
    },
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\ncalcula_seguro = getattr(undertest, 'calcula_seguro', None)\n\nclass PublicTests(unittest.TestCase):\n\n    def test_basico(self):\n        assert calcula_seguro(2000.0, [21, True, True, True, True, True, 'Misto']) == [120, \"Risco Alto\", 600.0]\n\n\nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n",
      "name": "public_tests.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "b3c3f57d7a6ea244b80a7c37372e0098",
  "iid": 6187100760178688,
  "activity_revision": "1.0.0"
}